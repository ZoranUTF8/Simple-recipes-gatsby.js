1. Use react icons 
npm install react-icons --save
import { FiAlignJustify } from "react-icons/fi";
<FiAlignJustify />



2. activeClassName="active-link" adds the class when active comes from gatsby



3. When loading the images it keeps the placeholder until its loaded 



4.Use the Gatsby Image plugin 

https://www.gatsbyjs.com/plugins/gatsby-plugin-image/?=gatsby%20plugin%20image

npm install gatsby-plugin-image gatsby-plugin-sharp gatsby-source-filesystem gatsby-transformer-sharp


Add the plugins to your gatsby-config.js:

1 option for static images that are always the same
 <StaticImage  src="../assets/images/big.jpg" alt="food"/>

1 for dynamic images


to display the images in the Gatsby image we need this GraphQL childImageSharp.gatsbyImageData;
But it is better to use the getImage function in case some props are missing
        const mainImage = getImage(image)

_________________________________________________

GRAPHQL
//
Working with data with gatsby

GRAPHQL is a sintax that describes how to ask for data.
GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data.

We chose what data / fields we want to recive back we need to be specific
//
We have static Query and Page Query

Static query for regular components and Page querys for page components.

Page querys accept variables which makes them dinamic and static do not.
//
We can use Field aliases to make querys shorter with the names

  site(siteMetadata: {}) {
    info:siteMetadata {
      mainTitle:title
    ... etc ...
//

allFile we have acces to all file nodes

file is one specific node


_________________________________________________

Gatsby plugin for file system

gatsby-source-filesystem

add to gatsby config

{
      resolve: `gatsby-source-filesystem`,
      options: {
        name: `images`,
        path: `${__dirname}/src/assets/images`,
      },
    },

    name: `images` = your name for the resoursce, whatever we want
__dirname = sets up an absolute path to the root
path: `${__dirname}/src/assets/images` = location of the folder

now we have acces to the images in the query

The benfit is that we can set up multiple instances and have acces to files in the query

_________________________________________________

Headless CMS

Concept decoupilng data from the app

Contentfull Headless cms